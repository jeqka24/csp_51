# Generated by Django 2.1.2 on 2018-10-21 23:40

from django.db import migrations, models
import django.db.models.deletion
import sport_reserve.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dictionary', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, verbose_name='Название мероприятия')),
                ('Type', models.CharField(choices=[('TR', 'Тренировочные'), ('INT', 'Всероссийские'), ('RUS', 'Международные')], help_text='Тренировочные, Всероссийские, Международные', max_length=3, verbose_name='Вид мероприятия')),
                ('Stage', models.CharField(blank=True, max_length=30, null=True, verbose_name='Этап соревнований')),
                ('DateStart', models.DateField(verbose_name='Дата начала мероприятия')),
                ('DateEnd', models.DateField(verbose_name='Дата окончания мероприятия')),
                ('EKP', models.CharField(blank=True, max_length=30, null=True, verbose_name='№ ЕКП')),
                ('FactCost', models.FloatField(blank=True, null=True, verbose_name='Фактические расходы')),
                ('Groups', models.ManyToManyField(help_text='Группы', to='dictionary.Group', verbose_name='Группы')),
                ('Place', models.ForeignKey(help_text='Место проведения мероприятия или соревнования', on_delete=django.db.models.deletion.PROTECT, to='dictionary.Place', verbose_name='Место проведения')),
                ('Sport', models.ForeignKey(help_text='Вид спорта', on_delete=django.db.models.deletion.PROTECT, to='dictionary.Sport', verbose_name='Вид спорта')),
            ],
            options={
                'verbose_name': 'Мерприятие',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(verbose_name='Дата результата')),
                ('Place', models.IntegerField(verbose_name='Занятое место')),
                ('PlaceComment', models.CharField(blank=True, max_length=100, null=True, verbose_name='Занятое место (комментарии)')),
                ('Competitors', models.IntegerField(verbose_name='Количество участников')),
                ('Event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Events', to='sport_reserve.Event', verbose_name='Соревнование')),
                ('Group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dictionary.Group', verbose_name='Группа')),
                ('SportKind', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Results', to='dictionary.SportKind', verbose_name='Дисциплина')),
            ],
            options={
                'verbose_name': 'Результат',
                'verbose_name_plural': 'Результаты',
            },
        ),
        migrations.CreateModel(
            name='Sportsman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FIO', models.CharField(help_text='ФИО спортсмена', max_length=100, verbose_name='Фамилия, Имя, Отчество')),
                ('Photo', models.ImageField(blank=True, help_text='Фото спортсмена', null=True, upload_to=sport_reserve.models.get_photo_path, verbose_name='Фото')),
                ('Birthday', models.DateField(blank=True, help_text='День рождения', null=True, verbose_name='День рождения')),
                ('Degree', models.CharField(blank=True, help_text='Разряд или звание, присвоенные спорстмену', max_length=100, null=True, verbose_name='Разряд/звание')),
                ('AssignmentDate', models.DateField(blank=True, null=True, verbose_name='Срок окончания трудового договора')),
                ('ParallelDate', models.DateField(blank=True, null=True, verbose_name='Срок окончания параллельного зачета')),
                ('Organisation', models.CharField(blank=True, help_text='Физкультурно-спортивная организация', max_length=100, null=True, verbose_name='ФСО')),
            ],
            options={
                'verbose_name': 'Спортсмен',
                'verbose_name_plural': 'Спортсмены',
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FIO', models.CharField(help_text='ФИО тренера', max_length=100, verbose_name='Фамилия, Имя, Отчество')),
                ('Phone1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Рабочий телефон')),
                ('Phone2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Мобильный телефон')),
                ('Email', models.CharField(blank=True, max_length=100, null=True, verbose_name='e-mail')),
                ('Sport', models.ForeignKey(help_text='Вид спорта, которым тренер занимается в данный момент', on_delete=django.db.models.deletion.PROTECT, to='dictionary.Sport', verbose_name='Вид спорта')),
            ],
            options={
                'verbose_name': 'Тренер',
                'verbose_name_plural': 'Тренеры',
            },
        ),
        migrations.AddField(
            model_name='sportsman',
            name='PersonalTrainer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='sport_reserve.Trainer', verbose_name='Текущий тренер'),
        ),
        migrations.AddField(
            model_name='sportsman',
            name='Sport',
            field=models.ForeignKey(help_text='Вид спорта, которым занимается спортсмен', null=True, on_delete=django.db.models.deletion.PROTECT, to='dictionary.Sport', verbose_name='Вид спорта'),
        ),
        migrations.AddField(
            model_name='result',
            name='Sportsman',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sport_reserve.Sportsman', verbose_name='Спортсмен'),
        ),
    ]
